#include <system.h>
#include <memory.h>
#include <types.h>
typedef struct alloc_major {
        alloc_major *prev;
        alloc_major *next;
        size_t pages;
        size_t size;
        size_t usage;
        alloc_minor *first;
} alloc_major;

typedef struct alloc_minor {
        alloc_minor *prev;
        alloc_minor *next;
        alloc_major *block;
        size_t magic;
        size_t size;
        size_t req_size;
} alloc_minor;


int mem_locked=0;
size_t PAGE_SIZE = 4096;

unsigned short *memcpyw(unsigned short *dest, const unsigned short *s, size_t count){
		short *dst = (short*)dest;
			short *src = (short*)s;
				--src;
					--dst;
						while(count--){
									*++dst=*++src;
										}
							return dest;
}
unsigned char *memcpy(unsigned char *dest, const unsigned char *src, size_t ct){
		char *dst = (char*) dest;
			char *s = (char*)src;
				--s;
					--dest;
						while(ct--){
									*++dst = *++s;
										}
							return dest;
}
unsigned char *memset(unsigned char *dest, unsigned char val, size_t count){
		char *d=(char*)dest;
			do{
						*d++ = val;
							}while(count--);
				return dest;
}
unsigned short *memsetw(unsigned short *dest, unsigned short val, size_t count){
		short *d=(short*)dest;
			do{
						*d++=val;
							} while(count--);
				return dest;
}

